{"version":3,"file":"index.js","sources":["../src/js/init.js","../src/js/task.js"],"sourcesContent":["window.global ||= window;\n","import \"./init\";\n\n// Kullanılacak kısmın import edilmesi\nimport SimpleLightbox from \"simplelightbox\";\n// Ek stillerin eklenmesi\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n// Dokümantasyonda belirtilen import\nimport iziToast from \"izitoast\";\n// Stil importu\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst input = document.getElementById(\"input\");\nconst button = document.getElementById(\"submitButton\");\nconst lists = document.querySelector(\".lists\");\n\nconst params = new URLSearchParams({\n  key: \"48294638-370103394c700755fbc6c4620\",\n  image_type: \"photo\",\n  orientation: \"horizontal\",\n  safesearch: \"true\",\n  per_page: \"60\",\n});\n\nbutton.addEventListener(\"click\", (e) => {\n  lists.innerHTML = `<span class=\"loader\"></span>`;\n  e.preventDefault;\n  params.set(\"q\", input.value);\n  fetch(`https://pixabay.com/api/?${params}`)\n    .then((r) => r.json())\n    .then((a) => {\n      if (a.total == 0) {\n        iziToast.error({\n          position: \"topRight\",\n          message:\n            \"Sorry, there are no images matching your search query. Please try again!\",\n        });\n      }\n      const markup = a.hits\n        .map((photo) => {\n          return `<li class=\"list\">\n       <div class=\"cards\">\n       <a class=\"link\" href= \"${photo.largeImageURL}\">\n       <img\n        class=\"image\"\n        src=\"${photo.webformatURL}\"\n        data-source=\"${photo.largeImageURL}\"\n        alt=\"${photo.tags}\"\n      />\n       </a>\n       <div class=\"info\">\n       <p>Likes <span>${photo.likes}</span></p>\n       <p>Views <span>${photo.views}</span></p>\n       <p>Comments <span>${photo.comments}</span></p>\n       <p>Downloads <span>${photo.downloads}</span></p>\n       </div>\n       </div>\n       </li>`;\n        })\n        .join(\"\");\n      lists.innerHTML = \"\";\n      lists.insertAdjacentHTML(\"afterbegin\", markup);\n      lists.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        if (e.target.tagName !== \"IMG\") {\n          return;\n        }\n      });\n      new SimpleLightbox(\".cards a\", {\n        captionsData: \"alt\",\n        captionDelay: 250,\n      }).refresh();\n    })\n    .catch((error) => console.log(error));\n});\n\nlists.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n  if (e.target.tagName !== \"IMG\") {\n    return;\n  }\n});\n "],"names":["input","button","lists","params","e","r","a","iziToast","markup","photo","SimpleLightbox","error"],"mappings":"6vBAAA,OAAO,SAAP,OAAO,OAAW,QCYlB,MAAMA,EAAQ,SAAS,eAAe,OAAO,EACvCC,EAAS,SAAS,eAAe,cAAc,EAC/CC,EAAQ,SAAS,cAAc,QAAQ,EAEvCC,EAAS,IAAI,gBAAgB,CACjC,IAAK,qCACL,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,SAAU,IACZ,CAAC,EAEDF,EAAO,iBAAiB,QAAUG,GAAM,CACtCF,EAAM,UAAY,+BAClBE,EAAE,eACFD,EAAO,IAAI,IAAKH,EAAM,KAAK,EAC3B,MAAM,4BAA4BG,CAAM,EAAE,EACvC,KAAME,GAAMA,EAAE,KAAM,CAAA,EACpB,KAAMC,GAAM,CACPA,EAAE,OAAS,GACbC,EAAS,MAAM,CACb,SAAU,WACV,QACE,0EACZ,CAAS,EAEH,MAAMC,EAASF,EAAE,KACd,IAAKG,GACG;AAAA;AAAA,gCAEeA,EAAM,aAAa;AAAA;AAAA;AAAA,eAGpCA,EAAM,YAAY;AAAA,uBACVA,EAAM,aAAa;AAAA,eAC3BA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA,wBAIDA,EAAM,KAAK;AAAA,wBACXA,EAAM,KAAK;AAAA,2BACRA,EAAM,QAAQ;AAAA,4BACbA,EAAM,SAAS;AAAA;AAAA;AAAA,aAIlC,EACA,KAAK,EAAE,EACVP,EAAM,UAAY,GAClBA,EAAM,mBAAmB,aAAcM,CAAM,EAC7CN,EAAM,iBAAiB,QAAUE,GAAM,CACrCA,EAAE,eAAgB,EACdA,EAAE,OAAO,OAGrB,CAAO,EACD,IAAIM,EAAe,WAAY,CAC7B,aAAc,MACd,aAAc,GACf,CAAA,EAAE,QAAS,CACb,CAAA,EACA,MAAOC,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACxC,CAAC,EAEDT,EAAM,iBAAiB,QAAUE,GAAM,CACrCA,EAAE,eAAgB,EACdA,EAAE,OAAO,OAGf,CAAC"}